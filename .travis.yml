
matrix:
  include:
    - language: node_js
      name: Bouncer Worker linter check
      dist: noble
      node_js:
        - "18.20.6"
      script:
        - cd tools/bouncer_worker && yarn install && yarn lint

      git:
          submodules: false

    - language: cpp
      dist: noble
      name: Unit tests and integration tests
      node_js:
        - "18.20.6"
      compiler:
           - gcc

      addons:
          apt:
              sources:
                  - ubuntu-toolchain-r-test
              packages:
                  - gcc
                  - g++
      git:
          submodules: false

      before_install:
          - echo -e "machine github.com\n  login $TESTUSER\n  password $TESTPW" >~/.netrc
          - git submodule update --init --recursive
          - git submodule status
          - sudo apt-get install gnupg curl
          - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          - sudo apt update
          - sudo apt install python3-full pipx -y
          - sudo apt remove mongodb && sudo apt purge mongodb && sudo apt autoremove && sudo rm -rf /var/lib/mongodb
          - curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor
          - echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
          - sudo apt-get update
          - sudo apt-get install -y mongodb-org mongodb-org-database mongodb-org-server mongodb-org-mongos mongodb-org-tools
          - sudo mkdir -p /var/lib/mongodb
          - sudo chmod 777 /var/lib/mongodb
          - sudo systemctl daemon-reload && sudo systemctl start mongod && echo $(mongod --version)
          - mkdir testData && cd testData
          - git clone --filter=blob:none --sparse https://$TESTUSER:$TESTPW@github.com/3drepo/tests.git .
          - git sparse-checkout add cplusplus/bouncer
          - mv cplusplus/bouncer/ .
          - cd ../
          - until nc -z localhost 27017; do echo Waiting for MongoDB; sleep 1; done
          - mongosh admin testData/bouncer/createUser.js
          - cd  testData/bouncer/data/database/
          - mongorestore -u "testUser" -p "3drepotest" --authenticationDatabase admin --quiet
          - cd ../../../../
          - echo ============ BOOST  INSTALL =============
          - sudo apt-get install libboost-all-dev
          - echo ============ MONGO  INSTALL =============
          - tar -zxf testData/bouncer/ext_libs/noble/mongo-cxx-driver.tgz
          - export MONGO_ROOT=$PWD/mongo-cxx-driver
          - echo ============ ASSIMP INSTALL =============
          - tar -zxf testData/bouncer/ext_libs/focal/assimp-5.0.1.tgz
          - export ASSIMP_ROOT=$PWD/assimp
          - echo ============ IFCOPENSHELL INSTALL =============
          - tar -zxf testData/bouncer/ext_libs/noble/IfcOpenShell-0.8.0.tgz
          - sudo apt-get install tk-dev tcl-dev libxmu-dev libxi-dev libboost-all-dev libcgal-dev libocct-data-exchange-dev libocct-draw-dev libocct-foundation-dev libocct-modeling-algorithms-dev libocct-modeling-data-dev libocct-ocaf-dev libocct-visualization-dev libgmp-dev libmpfr-dev libxml2-dev libeigen3-dev
          - export IFCOPENSHELL_ROOT=$PWD/IfcOpenShell
          - echo ============ TEIGHA INSTALL =============
          - cat testData/bouncer/ext_libs/focal/teigha/2025.11/teighaLinuxGCC8.3.tgz* | tar -zxf -
          - export ODA_ROOT=$PWD/teighaLinuxGCC8.3
          - export ODA_LIB_DIR=$ODA_ROOT/lib/lnxX64_8.3dll/
          - ls $ODA_ROOT/BimRv/Include/Database
          - echo ============ SYNCHRO INSTALL =============
          - sudo apt-get install zlib1g-dev libssl-dev libxft-dev
          - tar -zxf testData/bouncer/ext_libs/noble/thrift-0.12.0.tgz
          - tar -zxf testData/bouncer/ext_libs/noble/3drepoSynchroReader.tgz
          - tar -zxf testData/bouncer/ext_libs/focal/date.tgz
          - export THRIFT_ROOT=$PWD/thrift-0.12.0
          - export DATE_ROOT=$PWD/date
          - export SYNCHRO_READER_ROOT=$PWD/3drepoSynchroReader

      install:
          - pipx install cpp-coveralls
      services:
          - mongodb
      before_script:
          - export BOUNCER_DIR=$PWD
          - mkdir build && cd build
          - cmake -DREPO_BUILD_TOOLS=ON -DREPO_BUILD_CLIENT=ON -DREPO_BUILD_TESTS=ON -DREPO_BUILD_COVERAGE=ON -DODA_SUPPORT=ON -DCMAKE_BUILD_TYPE=Debug -DSYNCHRO_SUPPORT=ON -DCMAKE_INSTALL_PREFIX=$HOME/bouncer_install ../
          - mongosh mydb_test --eval 'db.createUser({user:"testUser",pwd:"3drepotest",roles:["readWrite"]});'
      script:
          - sudo make -j8 install
          - export REPO_MODEL_PATH=$PWD/../testData/bouncer/data/models
          - for f in $REPO_MODEL_PATH/*.json; do sed -i.bak -e 's|$REPO_MODEL_PATH|'$REPO_MODEL_PATH'|g' $f; done
          - export REPOBOUNCER_ROOT=$HOME/bouncer_install
          - cd ../tools/release
          - node package_release.js
          - export SYNCHRO_PLUGIN_LOCATION=$PWD/3drepobouncer/plugins
          - ln -s $REPO_MODEL_PATH/fileShare fileShare
          - LD_LIBRARY_PATH=$PWD/3drepobouncer PATH=$PWD/3drepobouncer:$PATH ./3drepobouncer/3drepobouncerTest

      after_success:
          - cd $BOUNCER_DIR - && coveralls --root . -e "test" -e "submodules" -e "cmake_modules" -e "tools" -e "mongo" -e "assimp" -e "assimp-install" -e "mongo-cxx-1.1.0" -e "aws-install"

    - language: cpp
      dist: noble
      name: license support compilation check
      node_js:
        - "18.20.6"
      compiler:
           - gcc

      addons:
          apt:
              sources:
                  - ubuntu-toolchain-r-test
              packages:
                  - gcc
                  - g++
      git:
          submodules: false

      before_install:
          - echo -e "machine github.com\n  login $TESTUSER\n  password $TESTPW" >~/.netrc
          - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          - sudo apt update
          - git submodule update --init --recursive
          - export BOUNCER_DIR=$PWD
          - mkdir testData && cd testData
          - git clone --filter=blob:none --sparse https://$TESTUSER:$TESTPW@github.com/3drepo/tests.git .
          - git sparse-checkout add cplusplus/bouncer/ext_libs/focal
          - git sparse-checkout add cplusplus/bouncer/ext_libs/noble
          - mv cplusplus/bouncer/ext_libs/focal/ .
          - mv cplusplus/bouncer/ext_libs/noble/ .
          - cd ../
          - echo ============ BOOST  INSTALL =============
          - sudo apt-get install libboost-all-dev
          - echo ============ MONGO  INSTALL =============
          - tar -zxf testData/noble/mongo-cxx-driver.tgz
          - export MONGO_ROOT=$PWD/mongo-cxx-driver
          - echo ============ ASSIMP INSTALL =============
          - tar -zxf testData/focal/assimp-5.0.1.tgz
          - export ASSIMP_ROOT=$PWD/assimp
          - echo ============ IFCOPENSHELL INSTALL =============
          - tar -zxf testData/noble/IfcOpenShell-0.8.0.tgz
          - sudo apt-get install tk-dev tcl-dev libxmu-dev libxi-dev libboost-all-dev libcgal-dev libocct-data-exchange-dev libocct-draw-dev libocct-foundation-dev libocct-modeling-algorithms-dev libocct-modeling-data-dev libocct-ocaf-dev libocct-visualization-dev libgmp-dev libmpfr-dev libxml2-dev libeigen3-dev
          - export IFCOPENSHELL_ROOT=$PWD/IfcOpenShell
          - echo ============ TEIGHA INSTALL =============
          - cat testData/focal/teigha/2025.11/teighaLinuxGCC8.3.tgz* | tar -zxf -
          - export ODA_ROOT=$PWD/teighaLinuxGCC8.3
          - export ODA_LIB_DIR=$ODA_ROOT/lib/lnxX64_8.3dll/
          - echo ============ SYNCHRO INSTALL =============
          - sudo apt-get install zlib1g-dev libssl-dev libxft-dev
          - tar -zxf testData/noble/thrift-0.12.0.tgz
          - tar -zxf testData/noble/3drepoSynchroReader.tgz
          - tar -zxf testData/focal/date.tgz
          - export THRIFT_ROOT=$PWD/thrift-0.12.0
          - export DATE_ROOT=$PWD/date
          - export SYNCHRO_READER_ROOT=$PWD/3drepoSynchroReader
          - echo ============ CRYPTOLENS INSTALL =============
          - sudo apt-get install libcurl4-openssl-dev
          - tar -zxf testData/noble/cryptoLens.tgz
          - export CRYPTOLENS_ROOT=$PWD/cryptoLens
            # dummy values just to ensure it compiles
          - export LICENSE_RSA_PUB_KEY_MOD="1bc"
          - export LICENSE_RSA_PUB_KEY_EXP="1bc"
          - export LICENSE_AUTH_TOKEN="1bc"
          - export LICENSE_PRODUCT_ID=123

      before_script:
          - mkdir build && cd build
      script:
            # check compilation with license enabled
          - cd $BOUNCER_DIR/build && cmake -DREPO_BUILD_TOOLS=ON -DREPO_BUILD_CLIENT=ON -DREPO_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug -DLICENSE_CHECK=ON -DCMAKE_INSTALL_PREFIX=$HOME/bouncer_install ../
          - sudo make install -j8

notifications:
    email:
        recipients:
            - 3drepo-devops@asite.com
